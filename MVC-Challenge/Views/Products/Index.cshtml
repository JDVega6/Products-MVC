@model MVC_Challenge.Domain.Dtos.ProductsViewModel
@{
    ViewData["Title"] = "Home Page";
    //Lista
    IEnumerable<MVC_Challenge.Domain.Dtos.ProductsViewModel> productList = ViewBag.Products;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<div class="card">
    <div class="card-header">
        Product List
    </div>
    <div class="card-body">
        <div class="row mx-md-n5">
            <div class="col px-md-5"><div class="p-3 bg-light"> <a asp-action="Create" asp-controller="Products" asp-route-idProducto="0" class="btn btn-success btn-sm">New product</a> </div></div>
            <div class="col px-md-5">
                <div class="p-3 bg-light">
                    <form asp-action="Index" asp-controller="Products" method="get">
                        <p>
                            Search: <input type="text" name="description" class="form- text" />
                            <button type="submit" class="btn btn-success btn-sm">Search</button>
                        </p>
                    </form>
                </div>
            </div>
        </div>
        <hr />
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Value</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (productList.ToList().Select(p => p.Id).Contains(Model.Id))
                {
                   <tr>
                        <td>@Model.Id</td>
                        <td>@Model.Description</td>
                        <td>@Model.Type</td>
                        <td>$ @Model.Value</td>
                        <td>@Model.Status</td>
                        <td>
                            <a asp-action="Update" asp-controller="Products" asp-route-idProduct="@Model.Id" class="btn btn-primary btn-sm">Editar</a>
                            <a asp-action="Delete" asp-controller="Products" asp-route-idProduct="@Model.Id" class="btn btn-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var item in productList)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Description</td>
                            <td>@item.Type</td>
                            <td>$ @item.Value</td>
                            <td>@item.Status</td>
                            <td>
                                <a asp-action="Update" asp-controller="Products" asp-route-idProduct="@item.Id" class="btn btn-primary btn-sm">Editar</a>
                                <a asp-action="Delete" asp-controller="Products" asp-route-idProduct="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                            </td>
                        </tr>
                    }
                }
                @if (!productList.ToList().Select(p => p.Id).Contains(Model.Id) && productList.Count() == 0)
                {
                    <tr>
                        <td>
                            <div class="card-header">
                                There are no products available
                            </div>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
    </div>
</div>

